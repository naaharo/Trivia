{"ast":null,"code":"var _jsxFileName = \"/home/naaharo/portifolio/Trivia/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { savePlayerNameAction, savePlayerEmailAction, saveTokenAction } from '../redux/actions/index';\nimport LogoTrivia from '../components/LogoTrivia';\nimport '../css/Login.css';\nimport Loading from '../components/Loading';\n// codado em pair programing All - Carla Heyde/Nata Abrahão/Paulo Bruno/Priscila Nogueira/Elaine Costa\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      this.setState({\n        [target.name]: target.value\n      }, () => {\n        this.validateButton();\n      });\n    };\n    this.validateButton = () => {\n      const {\n        email,\n        name\n      } = this.state;\n      const regexEmail = /\\S+@\\S+\\.\\S+/;\n      const enable = false;\n      const disable = true;\n      this.setState({\n        loginButtonDisabled: regexEmail.test(email) && name.length > 0 ? enable : disable\n      });\n    };\n    this.getToken = async () => {\n      const URL = 'https://opentdb.com/api_token.php?command=request';\n      const response = await fetch(URL);\n      const result = await response.json();\n      return result.token;\n    };\n    this.onSubmit = async () => {\n      const {\n        savePlayerName,\n        savePlayerEmail,\n        saveToken,\n        history\n      } = this.props;\n      const {\n        name,\n        email\n      } = this.state;\n      this.setState({\n        fetching: true\n      }, async () => {\n        const token = await this.getToken();\n        localStorage.setItem('token', token);\n        savePlayerName(name);\n        savePlayerEmail(email);\n        saveToken(token);\n        this.setState({\n          fetching: false\n        }, () => history.push('/game'));\n      });\n    };\n    this.state = {\n      name: '',\n      email: '',\n      loginButtonDisabled: true,\n      fetching: false\n    };\n  }\n  render() {\n    const {\n      email,\n      name,\n      loginButtonDisabled,\n      fetching\n    } = this.state;\n    return fetching ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 18\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(LogoTrivia, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"email\",\n      value: email,\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"Type your email\",\n      onChange: this.handleChange,\n      \"data-testid\": \"input-gravatar-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \"Name\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      id: \"name\",\n      value: name,\n      name: \"name\",\n      placeholder: \"Type your name\",\n      onChange: this.handleChange,\n      \"data-testid\": \"input-player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button-submit\",\n      type: \"button\",\n      name: \"login-button\",\n      disabled: loginButtonDisabled,\n      \"data-testid\": \"btn-play\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, \"Play\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/config\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button-config\",\n      type: \"button\",\n      name: \"config-button\",\n      \"data-testid\": \"btn-settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"Configuration\"))));\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  savePlayerName: name => dispatch(savePlayerNameAction(name)),\n  savePlayerEmail: email => dispatch(savePlayerEmailAction(email)),\n  saveToken: token => dispatch(saveTokenAction(token))\n});\nLogin.propTypes = {\n  savePlayerName: PropTypes.func.isRequired,\n  savePlayerEmail: PropTypes.func.isRequired,\n  saveToken: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"names":["React","Component","PropTypes","Link","connect","savePlayerNameAction","savePlayerEmailAction","saveTokenAction","LogoTrivia","Loading","Login","constructor","handleChange","_ref","target","setState","name","value","validateButton","email","state","regexEmail","enable","disable","loginButtonDisabled","test","length","getToken","URL","response","fetch","result","json","token","onSubmit","savePlayerName","savePlayerEmail","saveToken","history","props","fetching","localStorage","setItem","push","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","id","placeholder","onChange","disabled","onClick","to","mapDispatchToProps","dispatch","propTypes","func","isRequired","objectOf","any"],"sources":["/home/naaharo/portifolio/Trivia/src/pages/Login.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { savePlayerNameAction, savePlayerEmailAction,\n  saveTokenAction } from '../redux/actions/index';\nimport LogoTrivia from '../components/LogoTrivia';\nimport '../css/Login.css';\nimport Loading from '../components/Loading';\n// codado em pair programing All - Carla Heyde/Nata Abrahão/Paulo Bruno/Priscila Nogueira/Elaine Costa\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      loginButtonDisabled: true,\n      fetching: false,\n    };\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value }, () => {\n      this.validateButton();\n    });\n  }\n\n  validateButton = () => {\n    const { email, name } = this.state;\n    const regexEmail = /\\S+@\\S+\\.\\S+/;\n    const enable = false;\n    const disable = true;\n    this.setState({\n      loginButtonDisabled: regexEmail.test(email)\n        && name.length > 0 ? enable : disable,\n    });\n  }\n\n  getToken = async () => {\n    const URL = 'https://opentdb.com/api_token.php?command=request';\n    const response = await fetch(URL);\n    const result = await response.json();\n    return result.token;\n  }\n\n  onSubmit = async () => {\n    const { savePlayerName, savePlayerEmail, saveToken, history } = this.props;\n    const { name, email } = this.state;\n    this.setState({\n      fetching: true,\n    }, async () => {\n      const token = await this.getToken();\n      localStorage.setItem('token', token);\n      savePlayerName(name);\n      savePlayerEmail(email);\n      saveToken(token);\n      this.setState({\n        fetching: false,\n      }, () => history.push('/game'));\n    });\n  }\n\n  render() {\n    const { email, name, loginButtonDisabled, fetching } = this.state;\n    return (\n      fetching ? <Loading />\n        : (\n          <div className=\"App\">\n            <LogoTrivia />\n            <form className=\"login\">\n              <label className=\"label\" htmlFor=\"email\">\n                Email\n                <input\n                  className=\"input\"\n                  type=\"email\"\n                  value={ email }\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"Type your email\"\n                  onChange={ this.handleChange }\n                  data-testid=\"input-gravatar-email\"\n                />\n              </label>\n              <label className=\"label\" htmlFor=\"name\">\n                Name\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  id=\"name\"\n                  value={ name }\n                  name=\"name\"\n                  placeholder=\"Type your name\"\n                  onChange={ this.handleChange }\n                  data-testid=\"input-player-name\"\n                />\n              </label>\n              <button\n                className=\"button-submit\"\n                type=\"button\"\n                name=\"login-button\"\n                disabled={ loginButtonDisabled }\n                data-testid=\"btn-play\"\n                onClick={ this.onSubmit }\n              >\n                Play\n              </button>\n              <Link to=\"/config\">\n                <button\n                  className=\"button-config\"\n                  type=\"button\"\n                  name=\"config-button\"\n                  data-testid=\"btn-settings\"\n                >\n                  Configuration\n                </button>\n              </Link>\n            </form>\n          </div>\n        )\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  savePlayerName: (name) => dispatch(savePlayerNameAction(name)),\n  savePlayerEmail: (email) => dispatch(savePlayerEmailAction(email)),\n  saveToken: (token) => dispatch(saveTokenAction(token)),\n});\n\nLogin.propTypes = {\n  savePlayerName: PropTypes.func.isRequired,\n  savePlayerEmail: PropTypes.func.isRequired,\n  saveToken: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}