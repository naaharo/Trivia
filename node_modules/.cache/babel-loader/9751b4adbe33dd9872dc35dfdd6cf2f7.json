{"ast":null,"code":"var _jsxFileName = \"/home/naaharo/portifolio/Trivia/src/pages/Feedback.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport Header from '../components/Header';\nimport LogoTrivia from '../components/LogoTrivia';\nimport '../css/Feedback.css';\nclass Feedback extends Component {\n  constructor() {\n    super();\n    this.setRankingByPlayer = () => {\n      const {\n        nameFromStore,\n        scoreFromStore,\n        gravatarEmailFromStore\n      } = this.props;\n      const hashGerada = md5(gravatarEmailFromStore).toString();\n      const ranks = JSON.parse(localStorage.getItem('ranking'));\n      const playerRank = {\n        name: nameFromStore,\n        score: scoreFromStore,\n        picture: `https://www.gravatar.com/avatar/${hashGerada}`\n      };\n      if (ranks) {\n        localStorage.setItem('ranking', JSON.stringify([...ranks, playerRank]));\n      } else {\n        localStorage.setItem('ranking', JSON.stringify([playerRank]));\n      }\n    };\n    this.state = {\n      feedbackMessage: ''\n    };\n  }\n  componentDidMount() {\n    const {\n      assertionsFromStore\n    } = this.props;\n    this.setFeedbackMessage(assertionsFromStore);\n    this.setRankingByPlayer();\n  }\n  setFeedbackMessage(assertionsFromStore) {\n    const MIN_CORRECT_ANSWERS = 3;\n    if (assertionsFromStore >= MIN_CORRECT_ANSWERS) {\n      this.setState({\n        feedbackMessage: 'Well Done!'\n      });\n    } else {\n      this.setState({\n        feedbackMessage: 'Could be better...'\n      });\n    }\n  }\n  render() {\n    const {\n      feedbackMessage\n    } = this.state;\n    const {\n      score,\n      assertionsFromStore\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"feedbackCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LogoTrivia, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"feedback-message\",\n      \"data-testid\": \"feedback-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, feedbackMessage), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"score-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Final score: You did\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"scorePoints\",\n      \"data-testid\": \"feedback-total-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, ` ${score} `), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"points!\")), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"assertions-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"Assertions:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"assertions\",\n      \"data-testid\": \"feedback-total-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, ` ${assertionsFromStore} `)), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"play-again-button\",\n      type: \"button\",\n      name: \"play-again-button\",\n      \"data-testid\": \"btn-play-again\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"Play Again\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/ranking\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ranking-button\",\n      type: \"button\",\n      name: \"ranking-button\",\n      \"data-testid\": \"btn-ranking\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"Ranking\"))));\n  }\n}\nconst mapStateToProps = store => ({\n  assertionsFromStore: store.player.assertions,\n  score: store.player.score,\n  gravatarEmailFromStore: store.player.gravatarEmail,\n  nameFromStore: store.player.name,\n  scoreFromStore: store.player.score\n});\nFeedback.propTypes = {\n  assertionsFromStore: PropTypes.number,\n  score: PropTypes.number,\n  gravatarEmailFromStore: PropTypes.string,\n  nameFromStore: PropTypes.string,\n  scoreFromStore: PropTypes.number\n}.isRequired;\nexport default connect(mapStateToProps, null)(Feedback);","map":{"version":3,"names":["React","Component","PropTypes","Link","connect","md5","Header","LogoTrivia","Feedback","constructor","setRankingByPlayer","nameFromStore","scoreFromStore","gravatarEmailFromStore","props","hashGerada","toString","ranks","JSON","parse","localStorage","getItem","playerRank","name","score","picture","setItem","stringify","state","feedbackMessage","componentDidMount","assertionsFromStore","setFeedbackMessage","MIN_CORRECT_ANSWERS","setState","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","to","type","mapStateToProps","store","player","assertions","gravatarEmail","propTypes","number","string","isRequired"],"sources":["/home/naaharo/portifolio/Trivia/src/pages/Feedback.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport Header from '../components/Header';\nimport LogoTrivia from '../components/LogoTrivia';\nimport '../css/Feedback.css';\n\nclass Feedback extends Component {\n  constructor() {\n    super();\n    this.state = {\n      feedbackMessage: '',\n    };\n  }\n\n  componentDidMount() {\n    const { assertionsFromStore } = this.props;\n    this.setFeedbackMessage(assertionsFromStore);\n    this.setRankingByPlayer();\n  }\n\n  setRankingByPlayer = () => {\n    const { nameFromStore, scoreFromStore, gravatarEmailFromStore } = this.props;\n    const hashGerada = md5(gravatarEmailFromStore).toString();\n    const ranks = JSON.parse(localStorage.getItem('ranking'));\n    const playerRank = { name: nameFromStore, score: scoreFromStore, picture: `https://www.gravatar.com/avatar/${hashGerada}` };\n    if (ranks) {\n      localStorage.setItem('ranking', JSON.stringify([...ranks, playerRank]));\n    } else {\n      localStorage.setItem('ranking', JSON.stringify([playerRank]));\n    }\n  }\n\n  setFeedbackMessage(assertionsFromStore) {\n    const MIN_CORRECT_ANSWERS = 3;\n    if (assertionsFromStore >= MIN_CORRECT_ANSWERS) {\n      this.setState({\n        feedbackMessage: 'Well Done!',\n      });\n    } else {\n      this.setState({\n        feedbackMessage: 'Could be better...',\n      });\n    }\n  }\n\n  render() {\n    const { feedbackMessage } = this.state;\n    const { score, assertionsFromStore } = this.props;\n    return (\n      <main>\n        <Header />\n        <div className=\"feedbackCard\">\n          <LogoTrivia />\n          <h2\n            className=\"feedback-message\"\n            data-testid=\"feedback-text\"\n          >\n            {feedbackMessage}\n          </h2>\n          <section className=\"score-message\">\n            <span>Final score: You did</span>\n            <span\n              className=\"scorePoints\"\n              data-testid=\"feedback-total-score\"\n            >\n              { ` ${score} ` }\n            </span>\n            <span>points!</span>\n          </section>\n          <section className=\"assertions-message\">\n            <span>Assertions:</span>\n            <span\n              className=\"assertions\"\n              data-testid=\"feedback-total-question\"\n            >\n              { ` ${assertionsFromStore} ` }\n            </span>\n          </section>\n          <Link to=\"/\">\n            <button\n              className=\"play-again-button\"\n              type=\"button\"\n              name=\"play-again-button\"\n              data-testid=\"btn-play-again\"\n            >\n              Play Again\n            </button>\n          </Link>\n          <br />\n          <Link to=\"/ranking\">\n            <button\n              className=\"ranking-button\"\n              type=\"button\"\n              name=\"ranking-button\"\n              data-testid=\"btn-ranking\"\n            >\n              Ranking\n            </button>\n          </Link>\n        </div>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  assertionsFromStore: store.player.assertions,\n  score: store.player.score,\n  gravatarEmailFromStore: store.player.gravatarEmail,\n  nameFromStore: store.player.name,\n  scoreFromStore: store.player.score,\n});\n\nFeedback.propTypes = {\n  assertionsFromStore: PropTypes.number,\n  score: PropTypes.number,\n  gravatarEmailFromStore: PropTypes.string,\n  nameFromStore: PropTypes.string,\n  scoreFromStore: PropTypes.number,\n}.isRequired;\n\nexport default connect(mapStateToProps, null)(Feedback);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}