{"ast":null,"code":"var _jsxFileName = \"/home/naaharo/portifolio/Trivia/src/components/Questions.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { decode } from 'he';\nimport getQuestionsFromAPI from '../services/api';\nimport { myScore, invalidCode } from './Functions';\nimport { savePlayerEmailAction, savePlayerNameAction, savePlayerAssertionAction, saveScoreAction } from '../redux/actions';\nimport '../css/Questions.css';\nimport Feedback from '../pages/Feedback';\nimport BooleanBtn from './BooleanBtn';\nimport MultipleBtn from './MultipleBtn';\nimport Loading from './Loading';\nclass Questions extends Component {\n  constructor() {\n    super();\n    this.shuffleAnswers = questionsArray => {\n      const {\n        index\n      } = this.state;\n      const rightAnswer = questionsArray[index].correct_answer;\n      // console.log('\\nResposta:', rightAnswer);\n      const wrongAnswers = questionsArray[index].incorrect_answers;\n      const allAnswers = [...wrongAnswers, rightAnswer];\n      const LIMIT_VALUE = 0.5;\n      const shuffledArray = allAnswers.sort(() => Math.random() - LIMIT_VALUE);\n      localStorage.setItem('difficulty', questionsArray[index].difficulty);\n      return shuffledArray;\n    };\n    this.onClickAnswer = async _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        rightAnswer,\n        assertionsToStore\n      } = this.state;\n      const {\n        saveScore,\n        savePlayerAssertion,\n        stopTimer,\n        saveTimeToStore,\n        disableBtn\n      } = this.props;\n      stopTimer();\n      disableBtn();\n      await saveTimeToStore();\n      const {\n        clickedTime\n      } = this.props;\n      // console.log('clickedTime:', clickedTime);\n      const score = rightAnswer === target.value ? myScore(clickedTime) : 0;\n      this.setState(prevState => ({\n        okAnswer: true,\n        scorePlayer: prevState.scorePlayer + score,\n        nextButton: true\n      }), () => {\n        const {\n          scorePlayer\n        } = this.state;\n        saveScore(scorePlayer);\n      });\n      if (target.id === 'correctAnswer') {\n        savePlayerAssertion(assertionsToStore);\n        this.setState({\n          assertionsToStore: assertionsToStore + 1\n        });\n      }\n    };\n    this.changeQuestion = () => {\n      const {\n        history\n      } = this.props;\n      const {\n        index\n      } = this.state;\n      const FOUR = 4;\n      this.setState(prevState => ({\n        index: prevState.index + 1,\n        okAnswer: false,\n        nextButton: false\n      }), () => {\n        this.changeState();\n      });\n      if (index === FOUR) {\n        history.push('/feedback');\n      }\n    };\n    this.changeState = () => {\n      const {\n        index,\n        questionsArray\n      } = this.state;\n      const {\n        startTimer\n      } = this.props;\n      const shuffle = this.shuffleAnswers(questionsArray);\n      this.setState({\n        difficulty: questionsArray[index].difficulty,\n        question: questionsArray[index].question,\n        category: questionsArray[index].category,\n        type: questionsArray[index].type,\n        rightAnswer: questionsArray[index].correct_answer,\n        shuffledAnswers: shuffle\n      });\n      startTimer();\n    };\n    this.state = {\n      questionsArray: [],\n      index: 0,\n      difficulty: '',\n      question: '',\n      category: '',\n      type: '',\n      rightAnswer: '',\n      isFetching: false,\n      okAnswer: false,\n      nextButton: false,\n      scorePlayer: 0,\n      assertionsToStore: 1,\n      shuffledAnswers: []\n    };\n  }\n  async componentDidMount() {\n    const savedToken = localStorage.getItem('token');\n    const {\n      startTimer,\n      history,\n      savePlayerEmail,\n      savePlayerName\n    } = this.props;\n    this.setState({\n      isFetching: true\n    }, async () => {\n      const questions = await getQuestionsFromAPI(savedToken);\n      const INVALID_CODE = 3;\n      if (questions.response_code === INVALID_CODE) {\n        invalidCode(history, savePlayerEmail, savePlayerName);\n      } else {\n        const shuffle = this.shuffleAnswers(questions.results);\n        this.setState({\n          questionsArray: questions.results,\n          difficulty: questions.results[0].difficulty,\n          question: questions.results[0].question,\n          category: questions.results[0].category,\n          type: questions.results[0].type,\n          rightAnswer: questions.results[0].correct_answer,\n          isFetching: false,\n          shuffledAnswers: shuffle\n        });\n        startTimer();\n      }\n    });\n  }\n  render() {\n    const {\n      question,\n      difficulty,\n      category,\n      type,\n      index,\n      isFetching,\n      nextButton,\n      rightAnswer,\n      okAnswer,\n      questionsArray,\n      shuffledAnswers\n    } = this.state;\n    const {\n      seconds,\n      isButtonDisabled\n    } = this.props;\n    const MAX_INDEX_VALUE = 4;\n    return isFetching ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 20\n      }\n    }) : /*#__PURE__*/React.createElement(\"main\", {\n      className: \"questionCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"category\",\n      \"data-testid\": \"question-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, `Category: ${category}`), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"difficulty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, `Difficulty: ${difficulty}`)), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"question\",\n      \"data-testid\": \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, decode(question)), type === 'multiple' ? /*#__PURE__*/React.createElement(MultipleBtn, {\n      shuffledAnswers: shuffledAnswers,\n      isButtonDisabled: isButtonDisabled,\n      okAnswer: okAnswer,\n      rightAnswer: rightAnswer,\n      onClickAnswer: this.onClickAnswer,\n      questionsArray: questionsArray,\n      index: index,\n      difficulty: difficulty,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(BooleanBtn, {\n      shuffledAnswers: shuffledAnswers,\n      isButtonDisabled: isButtonDisabled,\n      okAnswer: okAnswer,\n      rightAnswer: rightAnswer,\n      onClickAnswer: this.onClickAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, \"Time:\", ' ', seconds), index <= MAX_INDEX_VALUE && nextButton && /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-next\",\n      onClick: this.changeQuestion,\n      className: \"next-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, \"Next\"), index > MAX_INDEX_VALUE && /*#__PURE__*/React.createElement(Feedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 43\n      }\n    }));\n  }\n}\nQuestions.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any),\n  isButtonDisabled: PropTypes.bool,\n  savePlayerName: PropTypes.func,\n  savePlayerEmail: PropTypes.func,\n  savePlayerAssertion: PropTypes.func,\n  seconds: PropTypes.number,\n  clickedTime: PropTypes.number,\n  stopTimer: PropTypes.func,\n  startTimer: PropTypes.func,\n  saveTimeToStore: PropTypes.func,\n  saveScore: PropTypes.func,\n  disableBtn: PropTypes.func\n}.isRequired;\nconst mapDispatchToProps = dispatch => ({\n  savePlayerName: name => dispatch(savePlayerNameAction(name)),\n  savePlayerEmail: email => dispatch(savePlayerEmailAction(email)),\n  saveScore: score => dispatch(saveScoreAction(score)),\n  savePlayerAssertion: assertions => dispatch(savePlayerAssertionAction(assertions))\n});\nconst mapStateToProps = state => ({\n  storeToken: state.token,\n  clickedTime: state.tempo.time\n});\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Questions));","map":{"version":3,"names":["React","Component","withRouter","connect","PropTypes","decode","getQuestionsFromAPI","myScore","invalidCode","savePlayerEmailAction","savePlayerNameAction","savePlayerAssertionAction","saveScoreAction","Feedback","BooleanBtn","MultipleBtn","Loading","Questions","constructor","shuffleAnswers","questionsArray","index","state","rightAnswer","correct_answer","wrongAnswers","incorrect_answers","allAnswers","LIMIT_VALUE","shuffledArray","sort","Math","random","localStorage","setItem","difficulty","onClickAnswer","_ref","target","assertionsToStore","saveScore","savePlayerAssertion","stopTimer","saveTimeToStore","disableBtn","props","clickedTime","score","value","setState","prevState","okAnswer","scorePlayer","nextButton","id","changeQuestion","history","FOUR","changeState","push","startTimer","shuffle","question","category","type","shuffledAnswers","isFetching","componentDidMount","savedToken","getItem","savePlayerEmail","savePlayerName","questions","INVALID_CODE","response_code","results","render","seconds","isButtonDisabled","MAX_INDEX_VALUE","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","propTypes","objectOf","any","bool","func","number","isRequired","mapDispatchToProps","dispatch","name","email","assertions","mapStateToProps","storeToken","token","tempo","time"],"sources":["/home/naaharo/portifolio/Trivia/src/components/Questions.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { decode } from 'he';\nimport getQuestionsFromAPI from '../services/api';\nimport { myScore, invalidCode } from './Functions';\nimport { savePlayerEmailAction, savePlayerNameAction,\n  savePlayerAssertionAction, saveScoreAction } from '../redux/actions';\nimport '../css/Questions.css';\nimport Feedback from '../pages/Feedback';\nimport BooleanBtn from './BooleanBtn';\nimport MultipleBtn from './MultipleBtn';\nimport Loading from './Loading';\n\nclass Questions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questionsArray: [],\n      index: 0,\n      difficulty: '',\n      question: '',\n      category: '',\n      type: '',\n      rightAnswer: '',\n      isFetching: false,\n      okAnswer: false,\n      nextButton: false,\n      scorePlayer: 0,\n      assertionsToStore: 1,\n      shuffledAnswers: [],\n    };\n  }\n\n  async componentDidMount() {\n    const savedToken = localStorage.getItem('token');\n    const { startTimer, history, savePlayerEmail, savePlayerName } = this.props;\n    this.setState({ isFetching: true }, async () => {\n      const questions = await getQuestionsFromAPI(savedToken);\n      const INVALID_CODE = 3;\n      if (questions.response_code === INVALID_CODE) {\n        invalidCode(history, savePlayerEmail, savePlayerName);\n      } else {\n        const shuffle = this.shuffleAnswers(questions.results);\n        this.setState({\n          questionsArray: questions.results,\n          difficulty: questions.results[0].difficulty,\n          question: questions.results[0].question,\n          category: questions.results[0].category,\n          type: questions.results[0].type,\n          rightAnswer: questions.results[0].correct_answer,\n          isFetching: false,\n          shuffledAnswers: shuffle,\n        });\n        startTimer();\n      }\n    });\n  }\n\n  shuffleAnswers = (questionsArray) => {\n    const { index } = this.state;\n    const rightAnswer = questionsArray[index].correct_answer;\n    // console.log('\\nResposta:', rightAnswer);\n    const wrongAnswers = questionsArray[index].incorrect_answers;\n    const allAnswers = [...wrongAnswers, rightAnswer];\n    const LIMIT_VALUE = 0.5;\n    const shuffledArray = allAnswers.sort(() => Math.random() - LIMIT_VALUE);\n    localStorage.setItem('difficulty', questionsArray[index].difficulty);\n    return shuffledArray;\n  }\n\n  onClickAnswer = async ({ target }) => {\n    const { rightAnswer, assertionsToStore } = this.state;\n    const { saveScore, savePlayerAssertion, stopTimer,\n      saveTimeToStore, disableBtn } = this.props;\n    stopTimer();\n    disableBtn();\n    await saveTimeToStore();\n    const { clickedTime } = this.props;\n    // console.log('clickedTime:', clickedTime);\n    const score = rightAnswer === target.value ? myScore(clickedTime) : 0;\n    this.setState((prevState) => ({\n      okAnswer: true,\n      scorePlayer: prevState.scorePlayer + score,\n      nextButton: true,\n    }), () => {\n      const { scorePlayer } = this.state;\n      saveScore(scorePlayer);\n    });\n    if (target.id === 'correctAnswer') {\n      savePlayerAssertion(assertionsToStore);\n      this.setState({ assertionsToStore: assertionsToStore + 1 });\n    }\n  }\n\n  changeQuestion = () => {\n    const { history } = this.props;\n    const { index } = this.state;\n    const FOUR = 4;\n    this.setState((prevState) => ({ index: prevState.index + 1,\n      okAnswer: false,\n      nextButton: false,\n    }), () => { this.changeState(); });\n    if (index === FOUR) { history.push('/feedback'); }\n  }\n\n  changeState = () => {\n    const { index, questionsArray } = this.state;\n    const { startTimer } = this.props;\n    const shuffle = this.shuffleAnswers(questionsArray);\n    this.setState({\n      difficulty: questionsArray[index].difficulty,\n      question: questionsArray[index].question,\n      category: questionsArray[index].category,\n      type: questionsArray[index].type,\n      rightAnswer: questionsArray[index].correct_answer,\n      shuffledAnswers: shuffle,\n    });\n    startTimer();\n  }\n\n  render() {\n    const { question, difficulty, category, type, index, isFetching,\n      nextButton, rightAnswer, okAnswer, questionsArray, shuffledAnswers } = this.state;\n    const { seconds, isButtonDisabled } = this.props;\n    const MAX_INDEX_VALUE = 4;\n    return (\n      isFetching ? <Loading />\n        : (\n          <main className=\"questionCard\">\n            <div>\n              <h4\n                className=\"category\"\n                data-testid=\"question-category\"\n              >\n                { `Category: ${category}` }\n              </h4>\n              <h4 className=\"difficulty\">{ `Difficulty: ${difficulty}` }</h4>\n            </div>\n            <h3\n              className=\"question\"\n              data-testid=\"question-text\"\n            >\n              { decode(question) }\n            </h3>\n            { type === 'multiple'\n              ? (\n                <MultipleBtn\n                  shuffledAnswers={ shuffledAnswers }\n                  isButtonDisabled={ isButtonDisabled }\n                  okAnswer={ okAnswer }\n                  rightAnswer={ rightAnswer }\n                  onClickAnswer={ this.onClickAnswer }\n                  questionsArray={ questionsArray }\n                  index={ index }\n                  difficulty={ difficulty }\n                />)\n              : (\n                <BooleanBtn\n                  shuffledAnswers={ shuffledAnswers }\n                  isButtonDisabled={ isButtonDisabled }\n                  okAnswer={ okAnswer }\n                  rightAnswer={ rightAnswer }\n                  onClickAnswer={ this.onClickAnswer }\n                />)}\n            <div className=\"timer\">\n              Time:\n              {' '}\n              {seconds}\n            </div>\n            { index <= MAX_INDEX_VALUE && nextButton\n              && (\n                <button\n                  type=\"button\"\n                  data-testid=\"btn-next\"\n                  onClick={ this.changeQuestion }\n                  className=\"next-button\"\n                >\n                  Next\n                </button>)}\n            { index > MAX_INDEX_VALUE && (<Feedback />)}\n          </main>\n        )\n    );\n  }\n}\n\nQuestions.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any),\n  isButtonDisabled: PropTypes.bool,\n  savePlayerName: PropTypes.func,\n  savePlayerEmail: PropTypes.func,\n  savePlayerAssertion: PropTypes.func,\n  seconds: PropTypes.number,\n  clickedTime: PropTypes.number,\n  stopTimer: PropTypes.func,\n  startTimer: PropTypes.func,\n  saveTimeToStore: PropTypes.func,\n  saveScore: PropTypes.func,\n  disableBtn: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  savePlayerName: (name) => dispatch(savePlayerNameAction(name)),\n  savePlayerEmail: (email) => dispatch(savePlayerEmailAction(email)),\n  saveScore: (score) => dispatch(saveScoreAction(score)),\n  savePlayerAssertion: (assertions) => dispatch(savePlayerAssertionAction(assertions)),\n});\n\nconst mapStateToProps = (state) => ({\n  storeToken: state.token,\n  clickedTime: state.tempo.time,\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Questions));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}